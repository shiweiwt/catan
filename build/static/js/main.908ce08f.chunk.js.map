{"version":3,"sources":["images/brick.png","images/desert.png","images/wheat.png","images/ore.png","images/sheep.png","images/wood.png","card.tsx","board.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Card","props","valueWidth","width","src","image","alt","style","position","top","left","height","opacity","transform","value","border","borderRadius","backgroundColor","color","Board","cardSize","a","b","positions","display","map","p","idx","cards","values","cardMap","brick","require","desert","wheat","ore","sheep","wood","shuffle","arr","i","length","j","Math","floor","random","temp","shuffleCards","cs","slice","v","console","log","shuffleValues","vs","App","useState","setCards","setValues","basename","process","className","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.908ce08f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brick.c9ce5fbf.png\";","module.exports = __webpack_public_path__ + \"static/media/desert.ac87c771.png\";","module.exports = __webpack_public_path__ + \"static/media/wheat.54206543.png\";","module.exports = __webpack_public_path__ + \"static/media/ore.dc5ae611.png\";","module.exports = __webpack_public_path__ + \"static/media/sheep.dcc88d02.png\";","module.exports = __webpack_public_path__ + \"static/media/wood.09af1d5a.png\";","import React from \"react\";\n\ninterface CardProps {\n  image: string;\n  value: number;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nfunction Card(props: CardProps) {\n  const valueWidth = props.width * 0.2;\n  return (\n    <div>\n      <img\n        src={props.image}\n        alt={props.image}\n        style={{\n          position: \"absolute\",\n          top: props.top,\n          left: props.left,\n          width: props.width,\n          height: props.height,\n          opacity: 50,\n          transform: \"rotateZ(30deg)\",\n        }}\n      />\n      {props.value > 0 && (\n        <span\n          style={{\n            position: \"absolute\",\n            // backgroundClip: \"border-box\",\n            border: \"solid #b3b3b3 2px\",\n            borderRadius: \"50%\",\n            backgroundColor: \"#ffffff\",\n            color: props.value == 6 || props.value == 8 ? \"#ff0000\" : \"#000000\",\n            top: props.top + props.height / 2 - valueWidth / 2,\n            left: props.left + props.width / 2 - valueWidth / 2,\n            // padding: \"0.2%\",\n            width: valueWidth,\n            height: valueWidth,\n            // lineHeight: valueWidth,\n          }}\n        >\n          {\" \"}\n          {props.value}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./card\";\n\ninterface BoardProps {\n  cards: string[];\n  values: number[];\n  top: number;\n  left: number;\n  cardSize: number;\n}\n\ninterface Coord {\n  top: number;\n  left: number;\n}\n\nfunction Board(props: BoardProps) {\n  var top = 0;\n  var left = props.left;\n  var cardSize = props.cardSize;\n  var factor = 1.732 / 2;\n  var a = cardSize / 2;\n  var b = a * factor;\n  var positions: Coord[] = [\n    // first row\n    {\n      top: top + 0,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 0,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 0,\n      left: left + 6 * b,\n    },\n    // 2nd row\n    {\n      top: top + 1.5 * a,\n      left: left + b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 3 * b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 5 * b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 7 * b,\n    },\n    // 3rd row\n    {\n      top: top + 3 * a,\n      left: left,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 6 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 8 * b,\n    },\n    // 4th row\n    {\n      top: top + 4.5 * a,\n      left: left + b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 3 * b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 5 * b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 7 * b,\n    },\n    // 5th row\n    {\n      top: top + 6 * a,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 6 * a,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 6 * a,\n      left: left + 6 * b,\n    },\n  ];\n\n  return (\n    <div style={{ display: \"inline-block\" }}>\n      {positions.map((p, idx) => {\n        return (\n          <Card\n            image={props.cards[idx]}\n            value={props.values[idx]}\n            top={p.top}\n            left={p.left}\n            width={cardSize}\n            height={cardSize}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./board\";\n\nvar brick = require(\"./images/brick.png\");\nvar desert = require(\"./images/desert.png\");\nvar wheat = require(\"./images/wheat.png\");\nvar ore = require(\"./images/ore.png\");\nvar sheep = require(\"./images/sheep.png\");\nvar wood = require(\"./images/wood.png\");\nvar cardMap: Record<string, string> = {\n  brick: brick,\n  desert: desert,\n  wheat: wheat,\n  ore: ore,\n  sheep: sheep,\n  wood: wood,\n  \"\": \"\",\n};\n\nfunction shuffle(arr: Object[]) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = arr[j];\n    arr[j] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction shuffleCards() {\n  let cs: string[] = [\n    \"ore\",\n    \"ore\",\n    \"ore\",\n    \"brick\",\n    \"brick\",\n    \"brick\",\n    \"wheat\",\n    \"wheat\",\n    \"wheat\",\n    \"wheat\",\n    \"sheep\",\n    \"sheep\",\n    \"sheep\",\n    \"sheep\",\n    \"wood\",\n    \"wood\",\n    \"wood\",\n    \"wood\",\n  ];\n  shuffle(cs);\n  cs = [...cs.slice(0, 9), \"desert\", ...cs.slice(9)].map((v) => cardMap[v]);\n  console.log(\"generated cards\", cs);\n  return cs;\n}\n\nfunction shuffleValues() {\n  let vs: number[] = [\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n  ];\n  shuffle(vs);\n  vs = [...vs.slice(0, 9), 0, ...vs.slice(9)];\n  console.log(\"generated cards\", vs);\n  return vs;\n}\n\nfunction App() {\n  const [cards, setCards] = useState<string[]>(shuffleCards());\n  const [values, setValues] = useState<number[]>(shuffleValues());\n\n  let generateBoard = () => {\n    setCards(shuffleCards());\n    setValues(shuffleValues());\n  };\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <button\n          onClick={generateBoard}\n          style={{\n            display: \"block\",\n            // position: \"fixed\",\n            height: 50,\n            // top: 10,\n            // left: 10,\n          }}\n        >\n          Genereate Board\n        </button>\n        {cards && values && (\n          <Board\n            cards={cards}\n            values={values}\n            left={150}\n            top={150}\n            cardSize={150}\n          />\n        )}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}