{"version":3,"sources":["images/brick.png","images/desert.png","images/wheat.png","images/ore.png","images/sheep.png","images/wood.png","cardmap.tsx","card.tsx","board.tsx","windowdimension.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cardMap","b","require","d","w","o","s","t","Card","props","valueWidth","width","src","image","alt","style","position","top","left","height","opacity","transform","value","border","borderRadius","backgroundColor","color","fontSize","Board","cardSize","positions","map","p","idx","cards","values","getWindowDimensions","window","innerWidth","innerHeight","shuffle","arr","i","length","j","Math","floor","random","temp","shuffleCards","cs","slice","console","log","shuffleValues","vs","generateBoardString","board","v","toString","join","App","useState","setCards","setValues","boardUrl","setBoardUrl","textAreaRef","useRef","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","location","search","boardParam","querystring","parse","data","fs","split","Number","parseBoard","protocol","host","pathname","basename","process","className","display","paddingTop","paddingBottom","alignContent","onClick","font","padding","marginTop","e","current","select","document","execCommand","target","focus","ref","margin","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5df52408.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brick.c9ce5fbf.png\";","module.exports = __webpack_public_path__ + \"static/media/desert.ac87c771.png\";","module.exports = __webpack_public_path__ + \"static/media/wheat.54206543.png\";","module.exports = __webpack_public_path__ + \"static/media/ore.dc5ae611.png\";","module.exports = __webpack_public_path__ + \"static/media/sheep.dcc88d02.png\";","module.exports = __webpack_public_path__ + \"static/media/wood.09af1d5a.png\";","import React from \"react\";\n\nvar brick = require(\"./images/brick.png\");\nvar desert = require(\"./images/desert.png\");\nvar wheat = require(\"./images/wheat.png\");\nvar ore = require(\"./images/ore.png\");\nvar sheep = require(\"./images/sheep.png\");\nvar tree = require(\"./images/wood.png\");\n\nexport var cardMap: Record<string, string> = {\n  b: brick,\n  d: desert,\n  w: wheat,\n  o: ore,\n  s: sheep,\n  t: tree,\n  \"\": \"\",\n};\n","import React from \"react\";\nimport { cardMap } from \"./cardmap\";\n\ninterface CardProps {\n  image: string;\n  value: number;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nfunction Card(props: CardProps) {\n  const valueWidth = props.width * 0.2;\n  return (\n    <div>\n      <img\n        src={cardMap[props.image]}\n        alt={props.image}\n        style={{\n          position: \"absolute\",\n          top: props.top,\n          left: props.left,\n          width: props.width,\n          height: props.height,\n          opacity: 50,\n          transform: \"rotateZ(30deg)\",\n        }}\n      />\n      {props.value > 0 && (\n        <span\n          style={{\n            position: \"absolute\",\n            border: \"solid #b3b3b3 2px\",\n            borderRadius: \"50%\",\n            backgroundColor: \"#ffffff\",\n            color:\n              props.value === 6 || props.value === 8 ? \"#ff0000\" : \"#000000\",\n            top: props.top + props.height / 2 - valueWidth / 2,\n            left: props.left + props.width / 2 - valueWidth / 2,\n            fontSize: valueWidth - 5,\n            width: valueWidth,\n            height: valueWidth,\n            // lineHeight: valueWidth,\n          }}\n        >\n          {props.value}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./card\";\n\ninterface BoardProps {\n  cards: string[];\n  values: number[];\n  top: number;\n  left: number;\n  cardSize: number;\n}\n\ninterface Coord {\n  top: number;\n  left: number;\n}\n\nfunction Board(props: BoardProps) {\n  var top = 0;\n  var left = props.left;\n  var cardSize = props.cardSize;\n  var factor = 1.732 / 2;\n  var a = cardSize;\n  var b = a * factor;\n  var positions: Coord[] = [\n    // first row\n    {\n      top: top + 0,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 0,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 0,\n      left: left + 6 * b,\n    },\n    // 2nd row\n    {\n      top: top + 1.5 * a,\n      left: left + b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 3 * b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 5 * b,\n    },\n    {\n      top: top + 1.5 * a,\n      left: left + 7 * b,\n    },\n    // 3rd row\n    {\n      top: top + 3 * a,\n      left: left,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 6 * b,\n    },\n    {\n      top: top + 3 * a,\n      left: left + 8 * b,\n    },\n    // 4th row\n    {\n      top: top + 4.5 * a,\n      left: left + b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 3 * b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 5 * b,\n    },\n    {\n      top: top + 4.5 * a,\n      left: left + 7 * b,\n    },\n    // 5th row\n    {\n      top: top + 6 * a,\n      left: left + 2 * b,\n    },\n    {\n      top: top + 6 * a,\n      left: left + 4 * b,\n    },\n    {\n      top: top + 6 * a,\n      left: left + 6 * b,\n    },\n  ];\n\n  return (\n    <>\n      {positions.map((p, idx) => {\n        return (\n          <Card\n            image={props.cards[idx]}\n            value={props.values[idx]}\n            top={p.top}\n            left={p.left}\n            width={cardSize * 2}\n            height={cardSize * 2}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Board;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./board\";\nimport useWindowDimensions from \"./windowdimension\";\nimport querystring from \"querystring\";\n\nfunction shuffle(arr: Object[]) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = arr[j];\n    arr[j] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction shuffleCards() {\n  let cs: string[] = [\n    \"o\",\n    \"o\",\n    \"o\",\n    \"b\",\n    \"b\",\n    \"b\",\n    \"w\",\n    \"w\",\n    \"w\",\n    \"w\",\n    \"s\",\n    \"s\",\n    \"s\",\n    \"s\",\n    \"t\",\n    \"t\",\n    \"t\",\n    \"t\",\n  ];\n  shuffle(cs);\n  shuffle(cs);\n  cs = [...cs.slice(0, 9), \"d\", ...cs.slice(9)];\n  console.log(\"generated cards\", cs);\n  return cs;\n}\n\nfunction shuffleValues() {\n  let vs: number[] = [\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n  ];\n  shuffle(vs);\n  shuffle(vs);\n  vs = [...vs.slice(0, 9), 0, ...vs.slice(9)];\n  console.log(\"generated cards\", vs);\n  return vs;\n}\n\ninterface BoardConfig {\n  cards: string[];\n  values: number[];\n}\n\nfunction parseBoard(board: string) {\n  let fs = board.split(\",\");\n  if (fs.length !== 38) {\n    return null;\n  }\n  let values = fs.slice(19).map((value: string) => Number(value));\n  let b: BoardConfig = {\n    cards: fs.slice(0, 19),\n    values: values,\n  };\n  return b;\n}\n\nfunction generateBoardString(board: BoardConfig) {\n  let fs = [...board.cards, ...board.values.map((v) => v.toString())];\n  return fs.join(\",\");\n}\n\nfunction App() {\n  const [cards, setCards] = useState<string[]>([]);\n  const [values, setValues] = useState<number[]>([]);\n  const [boardUrl, setBoardUrl] = useState<string>(\"\");\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  const { width } = useWindowDimensions();\n  const cardSize = width / 9;\n\n  let generateBoard = () => {\n    let cards = shuffleCards();\n    let values = shuffleValues();\n    let location = window.location;\n    let board: BoardConfig = {\n      cards: cards,\n      values: values,\n    };\n    let boardUrl =\n      `${location.protocol}://${location.host}${location.pathname}?b=` +\n      generateBoardString(board);\n    console.log(\"board url:\", boardUrl);\n    setBoardUrl(boardUrl);\n    setCards(cards);\n    setValues(values);\n  };\n\n  let shareBoardUrl = (e) => {\n    if (textAreaRef && textAreaRef.current) {\n      textAreaRef.current.select();\n      document.execCommand(\"copy\");\n      // This is just personal preference.\n      // I prefer to not show the whole text area selected.\n      e.target.focus();\n      console.log(\"boardURL copied\");\n    }\n  };\n\n  useEffect(() => {\n    let location = window.location;\n    console.log(\"location: \", location.search);\n    let board: BoardConfig | null = null;\n    if (location.search && location.search.length > 1) {\n      let query = querystring.parse(location.search.slice(1));\n      let boardParam = query.b;\n      if (boardParam) {\n        let data = typeof boardParam == \"string\" ? boardParam : boardParam[0];\n        console.log(\"data\", data);\n        board = parseBoard(data);\n        console.log(\"parsed board\", board);\n      }\n    }\n\n    if (!board) {\n      board = { cards: shuffleCards(), values: shuffleValues() };\n    }\n    setCards(board.cards);\n    setValues(board.values);\n    let boardUrl =\n      `${location.protocol}://${location.host}${location.pathname}?b=` +\n      generateBoardString(board);\n    console.log(\"board url:\", boardUrl);\n    setBoardUrl(boardUrl);\n  }, [window.location]);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <div\n          className=\"App-header\"\n          style={{\n            display: \"block\",\n            paddingTop: 20,\n            paddingBottom: 20,\n            width: \"100%\",\n          }}\n        >\n          Welcome to Catan\n        </div>\n        <div\n          style={{\n            alignContent: \"center\",\n          }}\n        >\n          <button\n            onClick={generateBoard}\n            style={{\n              // height: 100,\n              font: \"Serif 24px bold italic\",\n              padding: 10,\n              marginTop: 10,\n              color: \"white\",\n              backgroundColor: \"#4a74c5\",\n              borderRadius: \"10px\",\n            }}\n          >\n            Shuffle Board\n          </button>\n        </div>\n        <div\n          style={{\n            alignContent: \"center\",\n          }}\n        >\n          <button\n            onClick={shareBoardUrl}\n            style={{\n              // height: 100,\n              font: \"Serif 24px bold italic\",\n              padding: 10,\n              marginTop: 10,\n              color: \"white\",\n              backgroundColor: \"#4a74c5\",\n              borderRadius: \"10px\",\n            }}\n          >\n            Copy Board URL to Clipboard\n          </button>\n        </div>\n        <div>\n          <form>\n            <textarea\n              ref={textAreaRef}\n              style={{\n                font: \"ariel\",\n                border: \"none\",\n                // display: \"block\",\n                width: width / 2,\n                alignContent: \"center\",\n              }}\n              value={boardUrl}\n            />\n          </form>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            alignContent: \"center\",\n            border: \"5px solid lightblue\",\n            margin: \"20px\",\n            // left: \"20px\",\n            backgroundColor: \"rgba(0,0,255,0.2)\",\n            width: cardSize * 8.67 + 50,\n            height: cardSize * 8 + 50,\n          }}\n        >\n          {cards && values && (\n            <Board\n              cards={cards}\n              values={values}\n              left={0}\n              top={0}\n              cardSize={cardSize}\n            />\n          )}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}